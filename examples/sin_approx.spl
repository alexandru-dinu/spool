func factorial 1
    $n
    1 $f
    1 $i
    while
        @i @n <=
    do
        @f @i * $f
        @i 1 + $i
    end
    @f
end

# taylor approx of sin(x)
func sin 1
    $x
    0 $i
    0 $out
    while
        # approximate for this many steps
        @i 10 <
    do
        @i 2 * 1 + dup
        @x swap ** $num
        call factorial $den
        -1 @i ** $sign
        @num @den / @sign * @out + $out
        @i 1 + $i
    end
    @out
end

3.1415926 $pi                    # 7 decimal places ought to be enough for everybody
0 call sin peek                  # 0.0
@pi 6 / call sin round 3 peek    # 0.5
@pi 4 / call sin round 3 peek    # 0.707
@pi 3 / call sin round 3 peek    # 0.866
@pi 2 / call sin round 3 peek    # 1.0
